(module jazz.opengl.sample.shader.window jazz
  (import (jazz.cairo))
  (import (jazz.graphic))
  (import (jazz.io))
  (import (jazz.platform))
  (import (jazz.opengl))
  (import (jazz.opengl.glew))
  (import (jazz.opengl.sample))
  (import (jazz.opengl.sample.syntax (phase syntax)))
  (class Shader extends Object
    (slot type <int> accessors generate)
    (slot code accessors generate)
    (slot shaderid accessors generate)
    (method protected override (initialize type))
    (method public final (create-shader))
    (method public final (compile-shader)))
  (class Shader-Program extends Object
    (slot name <Object> getter generate)
    (slot vertex-shader <Object> accessors generate)
    (slot fragment-shader <Object> accessors generate)
    (slot program <Object> accessors generate)
    (slot attributes <Object> getter generate)
    (slot uniforms <Object> getter generate)
    (method protected override (initialize (name: name (unspecified))))
    (method protected virtual (prepare))
    (method protected virtual (default-vertex-shader))
    (method protected virtual (default-fragment-shader))
    (method public final (set-fs code))
    (method public final (set-vs code))
    (method public final (link))
    (method public final (relink))
    (method public final (create-shaders))
    (method public final (attach-shaders))
    (method public final (detach-shaders))
    (method public final (use))
    (method public final (unuse))
    (method public final (get-uniform name))
    (method public final (add-uniform name))
    (method public final (get-attribute name))
    (method public final (add-attribute name)))
  (class Color-Program extends Shader-Program
    (slot vertex-attribute getter generate)
    (slot normal-attribute getter generate)
    (slot color-attribute getter generate)
    (slot projMatrix-uniform getter generate)
    (slot viewMatrix-uniform getter generate)
    (method protected override (prepare))
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader))
    (method protected final (create-vertex-buffer vertices))
    (method protected final (create-color-buffer colors))
    (method protected final (bind-uniforms projection-matrix view-matrix))
    (method protected final (unbind-uniforms)))
  (class Texture-Program extends Shader-Program
    (slot vertex-attribute getter generate)
    (slot textureCoord-attribute getter generate)
    (slot projMatrix-uniform getter generate)
    (slot viewMatrix-uniform getter generate)
    (slot textureSampler-uniform getter generate)
    (method protected override (prepare))
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader))
    (method protected final (create-vertex-buffer vertices))
    (method protected final (bind-uniforms projection-matrix view-matrix texture-id))
    (method protected final (unbind-uniforms)))
  (class Interface-Program extends Shader-Program
    (slot vertex-attribute getter generate)
    (slot textureCoord-attribute getter generate)
    (slot projMatrix-uniform getter generate)
    (slot textureSampler-uniform getter generate)
    (method protected override (prepare))
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader))
    (method protected final (create-vertex-buffer vertices))
    (method protected final (bind-uniforms projection-matrix texture-id))
    (method protected final (unbind-uniforms)))
  (class Array extends Object
    (slot array getter generate))
  (class Color-Array extends Array
    (slot vertex-buffer)
    (slot color-buffer)
    (method protected override (initialize program vertices colors)))
  (class Shader-Showcase-Window extends OpenGL-Window
    (slot color-program getter generate)
    (slot texture-program getter generate)
    (slot interface-program getter generate)
    (slot blue-array getter generate)
    (slot red-array getter generate)
    (slot texture-array getter generate)
    (slot interface-array getter generate)
    (slot projection-matrix getter generate)
    (slot view-matrix getter generate)
    (slot orthographic-matrix getter generate)
    (slot texture getter generate)
    (slot interface getter generate)
    (method protected override (setup-opengl))
    (method protected final (create-programs))
    (method protected final (release-programs))
    (method protected final (initialize-arrays))
    (method protected final (create-red))
    (method protected final (create-blue))
    (method protected final (delete-arrays))
    (method protected override (resize-scene width <fl> height <fl>))
    (method protected override (key-press c))
    (method protected final (reload-buffers))
    (method protected override (draw-scene))))
